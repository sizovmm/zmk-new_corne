#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mt { quick-tap-ms = <200>; };

&lt { quick-tap-ms = <200>; };

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 3600  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 30    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp RIGHT_BRACKET  &kp Q  &kp W  &kp E      &kp R                 &kp T                                    &mmv MOVE_UP                     &kp Y        &kp U                      &kp I         &kp O    &kp P     &kp LEFT_BRACKET
&kp LCTRL          &kp A  &kp S  &kp D      &kp F                 &kp G                    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H        &kp J                      &kp K         &kp L    &kp SEMI  &kp SQT
&kp LEFT_ALT       &kp Z  &kp X  &kp C      &kp V                 &kp B        &mkp MB2                    &mmv MOVE_DOWN                   &kp N        &kp M                      &kp COMMA     &kp DOT  &kp FSLH  &kp BACKSLASH
                                 &lt 3 TAB  &mt LEFT_SHIFT SPACE  &lt 2 ENTER                                                               &lt 2 ENTER  &mt RIGHT_SHIFT BACKSPACE  &lt 3 DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        WORKMAN {
            display-name = "WRKMN";
            bindings = <
&kp RIGHT_BRACKET  &kp Q  &kp D  &kp R      &kp W                 &kp B                                     &mmv MOVE_UP                     &kp J        &kp F                      &kp U         &kp P    &kp SEMICOLON  &kp LEFT_BRACKET
&kp LCTRL          &kp A  &kp S  &kp H      &kp T                 &kp G                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp Y        &kp N                      &kp E         &kp O    &kp I          &kp SQT
&kp LEFT_ALT       &kp Z  &kp X  &kp M      &kp C                 &kp V        &mkp RCLK                    &mmv MOVE_DOWN                   &kp K        &kp L                      &kp COMMA     &kp DOT  &kp FSLH       &kp BACKSLASH
                                 &lt 3 TAB  &mt LEFT_SHIFT SPACE  &lt 2 ENTER                                                                &lt 2 ENTER  &mt RIGHT_SHIFT BACKSPACE  &lt 3 DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "LOWER";
            bindings = <
&kp UNDERSCORE  &kp F1           &kp F2        &kp F3        &kp F4        &kp F5                                     &kp UP                     &kp F6        &kp F7         &kp F8        &kp F9                &kp F10                &kp F11
&kp PLUS        &kp EXCLAMATION  &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT                &kp LEFT_ARROW  &mkp LCLK       &kp RIGHT  &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&kp EQUAL       &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp C_MUTE                    &kp DOWN_ARROW             &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp N9                &kp N0                 &kp F12
                                               &trans        &trans        &trans                                                                &trans        &trans         &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        raise_layer {
            display-name = "RAISE";
            bindings = <
&kp LEFT_WIN  &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &mmv MOVE_UP                     &kp CARET        &kp AMPS         &kp ASTRK     &kp PAGE_UP    &kp RPAR         &kp GRAVE
&sys_reset    &rgb_ug RGB_ON  &rgb_ug RGB_OFF  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &rgb_ug RGB_SAD  &kp LEFT         &kp UP_ARROW  &kp RIGHT      &rgb_ug RGB_EFR  &rgb_ug RGB_COLOR_HSB(355,78,48)
&bootloader   &out OUT_USB    &out OUT_BLE     &to 0            &to 1            &bt BT_CLR       &trans                    &mmv MOVE_DOWN                   &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp DOWN      &kp PAGE_DOWN  &rgb_ug RGB_EFF  &bootloader
                                               &trans           &trans           &trans                                                                      &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &trans      &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
